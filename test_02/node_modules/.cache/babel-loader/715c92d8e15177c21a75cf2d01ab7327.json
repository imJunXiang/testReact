{"ast":null,"code":"var _jsxFileName = \"/Users/wangjunxiang11/Desktop/git/testReact/test_01/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // const user = {\n//     firstName: 'Harper',\n//     lastName: 'Perez'\n// };\n// const element = getGreeting(user)\n// const element = (\n// <div>\n//     <h1>Hello!</h1>\n//     <h1>Good to see you here.</h1>\n// </div>\n// );\n// const element = React.createElement(\n//     'h1',\n//     {className: 'greeting'},\n//     'Hello world!'\n// );\n// function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n// }\n// function getGreeting(user) {\n//     if (user) {\n//         return <h1>Hello, {formatName(user)}!</h1>;\n//     }\n//     return <h1>Hello, Stranger.</h1>;\n// }\n// function tick() {\n//     const element = (\n//         <div>\n//             <h1>Hello world!</h1>\n//             <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//         </div>\n//     );\n//     ReactDOM.render(element,document.getElementById('root'));\n// }\n// setInterval(tick, 1000);\n// ReactDOM.render 貌似是一个渲染函数（x,y）\n// ReactDOM.render(\n//     element,\n//     document.getElementById('root')\n// );\n// function Welcome(props) {\n//     return <h1>Hello, {props.name}</h1>\n// }\n// class Welcome extends React.Component {\n//     render() {\n//         return <h1>Hello, {this.props.name}</h1>;\n//     }\n// }\n// function App() {\n//     return (\n//         <div>\n//             <Welcome name=\"haha\"></Welcome>\n//             <Welcome></Welcome>\n//             <Welcome name=\"heihei\"></Welcome>\n//         </div>\n//     );\n// }\n// const element = <App></App>\n// ReactDOM.render(\n//     element,\n//     document.getElementById('root')\n// );\n// function Clock(props) {\n//     return (\n//         <div>\n//             <h1>Hello, world!</h1>\n//             <h1>It is {props.date.toLocaleTimeString()}</h1>\n//         </div>\n//     );\n// }\n// class Clock extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {date:new Date()};\n//         this.tick = this.tick.bind(this)\n//     }\n//     componentDidMount() {\n//         // 挂载\n//         this.timerID = setInterval(this.tick, 1000);\n//     }\n//     componentWillUnmount() {\n//         // 卸载\n//         clearInterval(this.timerID);\n//     }\n//     tick() {\n//         this.setState({\n//             date: new Date()\n//         });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <hi>Hello, world!</hi>\n//                 <h2>It is {this.state.date.toLocaleTimeString()}</h2>\n//             </div>\n//         );\n//     }\n// }\n// function App() {\n//     return (\n//         <div>\n//             <Clock />\n//             <Clock />\n//             <Clock />\n//         </div>\n//     );\n// }\n// class Toggle extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {isToggleOn: true};\n//         this.handleClick = this.handleClick.bind(this);\n//     }\n//     handleClick() {\n//         this.setState(state => ({\n//             isToggleOn: !state.isToggleOn\n//         }));\n//     }\n//     render() {\n//         return (\n//             <button onClick={this.handleClick}>\n//                 {this.state.isToggleOn ? \"ON\":\"OFF\"}\n//             </button>\n//         );\n//     }\n// }\n// function UserGreeting(props) {\n//     return <h1>Welcome back!</h1>\n// }\n// function GuestGreeting(props) {\n//     return <h1>Please sign up.</h1>\n// }\n// function Greeting(props) {\n//     const isLoggedIn = props.isLoggedIn;\n//     if(isLoggedIn) {\n//         return <UserGreeting></UserGreeting>;\n//     }\n//     return <GuestGreeting/>\n// }\n// function LoginButton(props) {\n//     return (\n//         <button onClick={props.onClick}>login</button>\n//     );\n// }\n// function LogoutButton(props) {\n//     return (\n//         <button onClick={props.onClick}>Logout</button>\n//     );\n// }\n// class LoginControl extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleLoginClick = this.handleLoginClick.bind(this)\n//         this.handelLogoutClick = this.handelLogoutClick.bind(this)\n//         this.state = {isLoggedIn:false};\n//     }\n//     handleLoginClick() {\n//         this.setState({isLoggedIn:true});\n//     }\n//     handelLogoutClick() {\n//         this.setState({isLoggedIn:false});\n//     }\n//     render() {\n//         const isLoggedIn = this.state.isLoggedIn;\n//         let button;\n//         if (isLoggedIn) {\n//             button = <LogoutButton onClick={this.handelLogoutClick}/>\n//         } else {\n//             button = <LoginButton onClick={this.handleLoginClick}/>\n//         }\n//         return (\n//             <div>\n//                 <Greeting isLoggedIn={isLoggedIn}/>\n//                 {button}\n//             </div>\n//         )\n//     }\n// }\n// function Mailbox(props) {\n//     const unreadMessages = props.unreadMessages;\n//     return (\n//         <div>\n//             <h1>Hello!</h1>\n//             {\n//                 unreadMessages.length > 0 && \n//                 <h2>You have {unreadMessages.length} unread messages.</h2> \n//             }\n//         </div>\n//     );\n// }\n// const messages = ['React','Re: React','Re:Re: React'];\n// function WarningBanner(props) {\n//     if (!props.warn) {\n//         return null;\n//     }\n//     return (\n//         <div className=\"warning\">\n//             Warning!\n//         </div>\n//     );\n// }\n// class Page extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {showWarning: true};\n//         this.handleToggleClick = this.handleToggleClick.bind(this);\n//     }\n//     handleToggleClick() {\n//         this.setState(state => ({\n//             showWarning: !state.showWarning\n//         }));\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <WarningBanner warn={this.state.showWarning}/>\n//                 <button onClick={this.handleToggleClick}>\n//                     {this.state.showWarning ? 'Hide' : 'Show'}\n//                 </button>\n//             </div>\n//         );\n//     }\n// }\n// const numbers = [1,2,3,4,5];\n// function ListItem(props) {\n//     return <li>{props.value}</li>;\n// }\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number)=>\n//         <ListItem key={number.toString()} value={number}></ListItem> \n//     );\n//     return (\n//     <ul>{\n//         numbers.map((number)=>\n//             <ListItem key={number.toString} value={number}/>\n//         )\n//     }</ul>\n//     );\n// }\n// input \n// class NameForm extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {value: ''};\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     handleChange(event) {\n//         this.setState({value: event.target.value});\n//     }\n//     handleSubmit(event) {\n//         alert('提交的名字: ' + this.state.value);\n//         event.preventDefault(); \n//     }\n//     render() {\n//         return (\n//             <form onSubmit={this.handleSubmit}>\n//                 <label>\n//                     名字:\n//                     <input type=\"text\" value={this.state.value} onChange={this.handleChange}></input>\n//                 </label>\n//                 <input type=\"submit\" value=\"提交\" />  \n//             </form>\n//         );\n//     }\n// }\n// class EssayForm extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             value: '请撰写一篇关于你喜欢的 DOM 元素的文章.'\n//         };\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     handleChange(event) {\n//         this.setState({value: event.target.value});\n//     }\n//     handleSubmit(event) {\n//         alert('提交的文章: ' + this.state.value);\n//         event.preventDefault();\n//     }\n//     render() {\n//         return (\n//           <form onSubmit={this.handleSubmit}>\n//             <label>\n//               选择你喜欢的风味:\n//               <select value={this.state.value} onChange={this.handleChange}>\n//                 <option value=\"grapefruit\">葡萄柚</option>\n//                 <option value=\"lime\">酸橙</option>\n//                 <option value=\"coconut\">椰子</option>\n//                 <option value=\"mango\">芒果</option>\n//               </select>\n//             </label>\n//             <input type=\"submit\" value=\"提交\" />\n//           </form>\n//         );\n//       }\n// }\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    // this.setState({temperature: e.target.value});\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Enter temperature in \", scaleNames[scale], \":\"), React.createElement(\"input\", {\n      value: temperature,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"The water would boil.\");\n  }\n\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, \"The water would not boil.\");\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '',\n      scale: 'c'\n    };\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(TemperatureInput, {\n      scale: \"c\",\n      temperature: celsius,\n      onTemperatureChange: this.handleCelsiusChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }), React.createElement(TemperatureInput, {\n      scale: \"f\",\n      temperature: fahrenheit,\n      onTemperatureChange: this.handleFahrenheitChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), React.createElement(BoilingVerdict, {\n      celsius: parseFloat(celsius),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Calculator, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 457\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/wangjunxiang11/Desktop/git/testReact/test_01/src/index.js"],"names":["React","ReactDOM","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","scaleNames","c","f","TemperatureInput","Component","constructor","props","handleChange","bind","e","onTemperatureChange","target","value","render","scale","BoilingVerdict","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// const user = {\n//     firstName: 'Harper',\n//     lastName: 'Perez'\n// };\n\n// const element = getGreeting(user)\n// const element = (\n// <div>\n//     <h1>Hello!</h1>\n//     <h1>Good to see you here.</h1>\n// </div>\n// );\n\n// const element = React.createElement(\n//     'h1',\n//     {className: 'greeting'},\n//     'Hello world!'\n// );\n\n\n// function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n// }\n\n// function getGreeting(user) {\n//     if (user) {\n//         return <h1>Hello, {formatName(user)}!</h1>;\n//     }\n//     return <h1>Hello, Stranger.</h1>;\n// }\n\n// function tick() {\n//     const element = (\n//         <div>\n//             <h1>Hello world!</h1>\n//             <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//         </div>\n//     );\n//     ReactDOM.render(element,document.getElementById('root'));\n// }\n\n// setInterval(tick, 1000);\n// ReactDOM.render 貌似是一个渲染函数（x,y）\n// ReactDOM.render(\n//     element,\n//     document.getElementById('root')\n// );\n\n// function Welcome(props) {\n//     return <h1>Hello, {props.name}</h1>\n// }\n\n// class Welcome extends React.Component {\n//     render() {\n//         return <h1>Hello, {this.props.name}</h1>;\n//     }\n// }\n\n// function App() {\n//     return (\n//         <div>\n//             <Welcome name=\"haha\"></Welcome>\n//             <Welcome></Welcome>\n//             <Welcome name=\"heihei\"></Welcome>\n//         </div>\n//     );\n// }\n\n// const element = <App></App>\n\n// ReactDOM.render(\n//     element,\n//     document.getElementById('root')\n// );\n\n// function Clock(props) {\n//     return (\n//         <div>\n//             <h1>Hello, world!</h1>\n//             <h1>It is {props.date.toLocaleTimeString()}</h1>\n//         </div>\n//     );\n// }\n\n// class Clock extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {date:new Date()};\n//         this.tick = this.tick.bind(this)\n//     }\n\n//     componentDidMount() {\n//         // 挂载\n//         this.timerID = setInterval(this.tick, 1000);\n//     }\n\n//     componentWillUnmount() {\n//         // 卸载\n//         clearInterval(this.timerID);\n//     }\n\n//     tick() {\n//         this.setState({\n//             date: new Date()\n//         });\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <hi>Hello, world!</hi>\n//                 <h2>It is {this.state.date.toLocaleTimeString()}</h2>\n//             </div>\n//         );\n//     }\n// }\n\n// function App() {\n//     return (\n//         <div>\n//             <Clock />\n//             <Clock />\n//             <Clock />\n//         </div>\n//     );\n// }\n\n// class Toggle extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {isToggleOn: true};\n//         this.handleClick = this.handleClick.bind(this);\n//     }\n\n//     handleClick() {\n//         this.setState(state => ({\n//             isToggleOn: !state.isToggleOn\n//         }));\n//     }\n\n//     render() {\n//         return (\n//             <button onClick={this.handleClick}>\n//                 {this.state.isToggleOn ? \"ON\":\"OFF\"}\n//             </button>\n//         );\n//     }\n// }\n\n// function UserGreeting(props) {\n//     return <h1>Welcome back!</h1>\n// }\n\n// function GuestGreeting(props) {\n//     return <h1>Please sign up.</h1>\n// }\n\n// function Greeting(props) {\n//     const isLoggedIn = props.isLoggedIn;\n//     if(isLoggedIn) {\n//         return <UserGreeting></UserGreeting>;\n//     }\n\n//     return <GuestGreeting/>\n// }\n\n// function LoginButton(props) {\n//     return (\n//         <button onClick={props.onClick}>login</button>\n//     );\n// }\n\n// function LogoutButton(props) {\n//     return (\n//         <button onClick={props.onClick}>Logout</button>\n//     );\n// }\n\n// class LoginControl extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleLoginClick = this.handleLoginClick.bind(this)\n//         this.handelLogoutClick = this.handelLogoutClick.bind(this)\n//         this.state = {isLoggedIn:false};\n//     }\n\n//     handleLoginClick() {\n//         this.setState({isLoggedIn:true});\n//     }\n\n//     handelLogoutClick() {\n//         this.setState({isLoggedIn:false});\n//     }\n\n//     render() {\n//         const isLoggedIn = this.state.isLoggedIn;\n//         let button;\n//         if (isLoggedIn) {\n//             button = <LogoutButton onClick={this.handelLogoutClick}/>\n//         } else {\n//             button = <LoginButton onClick={this.handleLoginClick}/>\n//         }\n\n//         return (\n//             <div>\n//                 <Greeting isLoggedIn={isLoggedIn}/>\n//                 {button}\n//             </div>\n//         )\n//     }\n// }\n\n// function Mailbox(props) {\n//     const unreadMessages = props.unreadMessages;\n//     return (\n//         <div>\n//             <h1>Hello!</h1>\n//             {\n//                 unreadMessages.length > 0 && \n//                 <h2>You have {unreadMessages.length} unread messages.</h2> \n//             }\n//         </div>\n//     );\n// }\n\n// const messages = ['React','Re: React','Re:Re: React'];\n\n// function WarningBanner(props) {\n//     if (!props.warn) {\n//         return null;\n//     }\n\n//     return (\n//         <div className=\"warning\">\n//             Warning!\n//         </div>\n//     );\n// }\n\n// class Page extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {showWarning: true};\n//         this.handleToggleClick = this.handleToggleClick.bind(this);\n//     }\n\n//     handleToggleClick() {\n//         this.setState(state => ({\n//             showWarning: !state.showWarning\n//         }));\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <WarningBanner warn={this.state.showWarning}/>\n//                 <button onClick={this.handleToggleClick}>\n//                     {this.state.showWarning ? 'Hide' : 'Show'}\n//                 </button>\n//             </div>\n//         );\n//     }\n// }\n\n// const numbers = [1,2,3,4,5];\n\n// function ListItem(props) {\n//     return <li>{props.value}</li>;\n// }\n\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number)=>\n//         <ListItem key={number.toString()} value={number}></ListItem> \n//     );\n\n//     return (\n//     <ul>{\n//         numbers.map((number)=>\n//             <ListItem key={number.toString} value={number}/>\n//         )\n//     }</ul>\n//     );\n// }\n\n// input \n\n// class NameForm extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {value: ''};\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n\n//     handleChange(event) {\n//         this.setState({value: event.target.value});\n//     }\n\n//     handleSubmit(event) {\n//         alert('提交的名字: ' + this.state.value);\n//         event.preventDefault(); \n//     }\n\n//     render() {\n//         return (\n//             <form onSubmit={this.handleSubmit}>\n//                 <label>\n//                     名字:\n//                     <input type=\"text\" value={this.state.value} onChange={this.handleChange}></input>\n//                 </label>\n//                 <input type=\"submit\" value=\"提交\" />  \n//             </form>\n//         );\n//     }\n// }\n\n// class EssayForm extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             value: '请撰写一篇关于你喜欢的 DOM 元素的文章.'\n//         };\n\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n\n//     handleChange(event) {\n//         this.setState({value: event.target.value});\n//     }\n\n//     handleSubmit(event) {\n//         alert('提交的文章: ' + this.state.value);\n//         event.preventDefault();\n//     }\n\n//     render() {\n//         return (\n//           <form onSubmit={this.handleSubmit}>\n//             <label>\n//               选择你喜欢的风味:\n//               <select value={this.state.value} onChange={this.handleChange}>\n//                 <option value=\"grapefruit\">葡萄柚</option>\n//                 <option value=\"lime\">酸橙</option>\n//                 <option value=\"coconut\">椰子</option>\n//                 <option value=\"mango\">芒果</option>\n//               </select>\n//             </label>\n//             <input type=\"submit\" value=\"提交\" />\n//           </form>\n//         );\n//       }\n// }\n\nfunction toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n    return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}\n\nconst scaleNames = {\n    c: 'Celsius',\n    f: 'Fahrenheit'\n};\n\nclass TemperatureInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        // this.setState({temperature: e.target.value});\n        this.props.onTemperatureChange(e.target.value)\n    }\n\n    render() {\n        const temperature = this.props.temperature;\n        const scale = this.props.scale;\n        return (\n            <fieldset>\n                <legend>Enter temperature in {scaleNames[scale]}:</legend>\n                <input value={temperature}\n                    onChange={this.handleChange}></input>\n            </fieldset>\n        );\n    }\n}\n\nfunction BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n        return <p>The water would boil.</p>\n    }\n\n    return <p>The water would not boil.</p>\n}\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n        this.state = { temperature: '', scale: 'c' };\n    }\n\n    handleCelsiusChange(temperature) {\n        this.setState({ scale: 'c', temperature });\n    }\n\n    handleFahrenheitChange(temperature) {\n        this.setState({ scale: 'f', temperature });\n    }\n\n    render() {\n        const scale = this.state.scale;\n        const temperature = this.state.temperature;\n        const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n        const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n        return (\n            <div>\n                <TemperatureInput\n                    scale=\"c\"\n                    temperature={celsius}\n                    onTemperatureChange={this.handleCelsiusChange} />\n\n                <TemperatureInput\n                    scale=\"f\"\n                    temperature={fahrenheit}\n                    onTemperatureChange={this.handleFahrenheitChange} />\n\n                <BoilingVerdict\n                    celsius={parseFloat(celsius)} />\n\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Calculator />,\n    document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}