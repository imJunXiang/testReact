{"ast":null,"code":"var _jsxFileName = \"/Users/wangjunxiang11/Desktop/git/testReact/test_01/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport BasicExample from '/App'; // const user = {\n//     firstName: 'Harper',\n//     lastName: 'Perez'\n// };\n// const element = getGreeting(user)\n// const element = (\n// <div>\n//     <h1>Hello!</h1>\n//     <h1>Good to see you here.</h1>\n// </div>\n// );\n// const element = React.createElement(\n//     'h1',\n//     {className: 'greeting'},\n//     'Hello world!'\n// );\n// function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n// }\n// function getGreeting(user) {\n//     if (user) {\n//         return <h1>Hello, {formatName(user)}!</h1>;\n//     }\n//     return <h1>Hello, Stranger.</h1>;\n// }\n// function tick() {\n//     const element = (\n//         <div>\n//             <h1>Hello world!</h1>\n//             <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//         </div>\n//     );\n//     ReactDOM.render(element,document.getElementById('root'));\n// }\n// setInterval(tick, 1000);\n// ReactDOM.render 貌似是一个渲染函数（x,y）\n// ReactDOM.render(\n//     element,\n//     document.getElementById('root')\n// );\n// function Welcome(props) {\n//     return <h1>Hello, {props.name}</h1>\n// }\n// class Welcome extends React.Component {\n//     render() {\n//         return <h1>Hello, {this.props.name}</h1>;\n//     }\n// }\n// function App() {\n//     return (\n//         <div>\n//             <Welcome name=\"haha\"></Welcome>\n//             <Welcome></Welcome>\n//             <Welcome name=\"heihei\"></Welcome>\n//         </div>\n//     );\n// }\n// const element = <App></App>\n// ReactDOM.render(\n//     element,\n//     document.getElementById('root')\n// );\n// function Clock(props) {\n//     return (\n//         <div>\n//             <h1>Hello, world!</h1>\n//             <h1>It is {props.date.toLocaleTimeString()}</h1>\n//         </div>\n//     );\n// }\n// class Clock extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {date:new Date()};\n//         this.tick = this.tick.bind(this)\n//     }\n//     componentDidMount() {\n//         // 挂载\n//         this.timerID = setInterval(this.tick, 1000);\n//     }\n//     componentWillUnmount() {\n//         // 卸载\n//         clearInterval(this.timerID);\n//     }\n//     tick() {\n//         this.setState({\n//             date: new Date()\n//         });\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <hi>Hello, world!</hi>\n//                 <h2>It is {this.state.date.toLocaleTimeString()}</h2>\n//             </div>\n//         );\n//     }\n// }\n// function App() {\n//     return (\n//         <div>\n//             <Clock />\n//             <Clock />\n//             <Clock />\n//         </div>\n//     );\n// }\n// class Toggle extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {isToggleOn: true};\n//         this.handleClick = this.handleClick.bind(this);\n//     }\n//     handleClick() {\n//         this.setState(state => ({\n//             isToggleOn: !state.isToggleOn\n//         }));\n//     }\n//     render() {\n//         return (\n//             <button onClick={this.handleClick}>\n//                 {this.state.isToggleOn ? \"ON\":\"OFF\"}\n//             </button>\n//         );\n//     }\n// }\n// function UserGreeting(props) {\n//     return <h1>Welcome back!</h1>\n// }\n// function GuestGreeting(props) {\n//     return <h1>Please sign up.</h1>\n// }\n// function Greeting(props) {\n//     const isLoggedIn = props.isLoggedIn;\n//     if(isLoggedIn) {\n//         return <UserGreeting></UserGreeting>;\n//     }\n//     return <GuestGreeting/>\n// }\n// function LoginButton(props) {\n//     return (\n//         <button onClick={props.onClick}>login</button>\n//     );\n// }\n// function LogoutButton(props) {\n//     return (\n//         <button onClick={props.onClick}>Logout</button>\n//     );\n// }\n// class LoginControl extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleLoginClick = this.handleLoginClick.bind(this)\n//         this.handelLogoutClick = this.handelLogoutClick.bind(this)\n//         this.state = {isLoggedIn:false};\n//     }\n//     handleLoginClick() {\n//         this.setState({isLoggedIn:true});\n//     }\n//     handelLogoutClick() {\n//         this.setState({isLoggedIn:false});\n//     }\n//     render() {\n//         const isLoggedIn = this.state.isLoggedIn;\n//         let button;\n//         if (isLoggedIn) {\n//             button = <LogoutButton onClick={this.handelLogoutClick}/>\n//         } else {\n//             button = <LoginButton onClick={this.handleLoginClick}/>\n//         }\n//         return (\n//             <div>\n//                 <Greeting isLoggedIn={isLoggedIn}/>\n//                 {button}\n//             </div>\n//         )\n//     }\n// }\n// function Mailbox(props) {\n//     const unreadMessages = props.unreadMessages;\n//     return (\n//         <div>\n//             <h1>Hello!</h1>\n//             {\n//                 unreadMessages.length > 0 && \n//                 <h2>You have {unreadMessages.length} unread messages.</h2> \n//             }\n//         </div>\n//     );\n// }\n// const messages = ['React','Re: React','Re:Re: React'];\n// function WarningBanner(props) {\n//     if (!props.warn) {\n//         return null;\n//     }\n//     return (\n//         <div className=\"warning\">\n//             Warning!\n//         </div>\n//     );\n// }\n// class Page extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {showWarning: true};\n//         this.handleToggleClick = this.handleToggleClick.bind(this);\n//     }\n//     handleToggleClick() {\n//         this.setState(state => ({\n//             showWarning: !state.showWarning\n//         }));\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <WarningBanner warn={this.state.showWarning}/>\n//                 <button onClick={this.handleToggleClick}>\n//                     {this.state.showWarning ? 'Hide' : 'Show'}\n//                 </button>\n//             </div>\n//         );\n//     }\n// }\n// const numbers = [1,2,3,4,5];\n// function ListItem(props) {\n//     return <li>{props.value}</li>;\n// }\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number)=>\n//         <ListItem key={number.toString()} value={number}></ListItem> \n//     );\n//     return (\n//     <ul>{\n//         numbers.map((number)=>\n//             <ListItem key={number.toString} value={number}/>\n//         )\n//     }</ul>\n//     );\n// }\n// input \n// class NameForm extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {value: ''};\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     handleChange(event) {\n//         this.setState({value: event.target.value});\n//     }\n//     handleSubmit(event) {\n//         alert('提交的名字: ' + this.state.value);\n//         event.preventDefault(); \n//     }\n//     render() {\n//         return (\n//             <form onSubmit={this.handleSubmit}>\n//                 <label>\n//                     名字:\n//                     <input type=\"text\" value={this.state.value} onChange={this.handleChange}></input>\n//                 </label>\n//                 <input type=\"submit\" value=\"提交\" />  \n//             </form>\n//         );\n//     }\n// }\n// class EssayForm extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             value: '请撰写一篇关于你喜欢的 DOM 元素的文章.'\n//         };\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     handleChange(event) {\n//         this.setState({value: event.target.value});\n//     }\n//     handleSubmit(event) {\n//         alert('提交的文章: ' + this.state.value);\n//         event.preventDefault();\n//     }\n//     render() {\n//         return (\n//           <form onSubmit={this.handleSubmit}>\n//             <label>\n//               选择你喜欢的风味:\n//               <select value={this.state.value} onChange={this.handleChange}>\n//                 <option value=\"grapefruit\">葡萄柚</option>\n//                 <option value=\"lime\">酸橙</option>\n//                 <option value=\"coconut\">椰子</option>\n//                 <option value=\"mango\">芒果</option>\n//               </select>\n//             </label>\n//             <input type=\"submit\" value=\"提交\" />\n//           </form>\n//         );\n//       }\n// }\n// function toCelsius(fahrenheit) {\n//     return (fahrenheit - 32) * 5 / 9;\n// }\n// function toFahrenheit(celsius) {\n//     return (celsius * 9 / 5) + 32;\n// }\n// function tryConvert(temperature, convert) {\n//     const input = parseFloat(temperature);\n//     if (Number.isNaN(input)) {\n//         return '';\n//     }\n//     const output = convert(input);\n//     const rounded = Math.round(output * 1000) / 1000;\n//     return rounded.toString();\n// }\n// const scaleNames = {\n//     c: 'Celsius',\n//     f: 'Fahrenheit'\n// };\n// class TemperatureInput extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleChange = this.handleChange.bind(this);\n//     }\n//     handleChange(e) {\n//         // this.setState({temperature: e.target.value});\n//         this.props.onTemperatureChange(e.target.value)\n//     }\n//     render() {\n//         const temperature = this.props.temperature;\n//         const scale = this.props.scale;\n//         return (\n//             <fieldset>\n//                 <legend>Enter temperature in {scaleNames[scale]}:</legend>\n//                 <input value={temperature}\n//                     onChange={this.handleChange}></input>\n//             </fieldset>\n//         );\n//     }\n// }\n// function BoilingVerdict(props) {\n//     if (props.celsius >= 100) {\n//         return <p>The water would boil.</p>\n//     }\n//     return <p>The water would not boil.</p>\n// }\n// class Calculator extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n//         this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n//         this.state = { temperature: '', scale: 'c' };\n//     }\n//     handleCelsiusChange(temperature) {\n//         this.setState({ scale: 'c', temperature });\n//     }\n//     handleFahrenheitChange(temperature) {\n//         this.setState({ scale: 'f', temperature });\n//     }\n//     render() {\n//         const scale = this.state.scale;\n//         const temperature = this.state.temperature;\n//         const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n//         const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n//         return (\n//             <div>\n//                 <TemperatureInput\n//                     scale=\"c\"\n//                     temperature={celsius}\n//                     onTemperatureChange={this.handleCelsiusChange} />\n//                 <TemperatureInput\n//                     scale=\"f\"\n//                     temperature={fahrenheit}\n//                     onTemperatureChange={this.handleFahrenheitChange} />\n//                 <BoilingVerdict\n//                     celsius={parseFloat(celsius)} />\n//             </div>\n//         );\n//     }\n// }\n\nfunction FancyBorder(props) {\n  return React.createElement(\"div\", {\n    className: 'FancyBorder FancyBorder-' + props.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }, props.children);\n}\n\nfunction WelcomeDialog() {\n  return React.createElement(FancyBorder, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"Dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  }, \"Welcome\"), React.createElement(\"p\", {\n    className: \"Dialog-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }, \"Thank you for visiting our spacecraft!\"));\n}\n\nconst ThemeContext = React.createContext('light');\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(ThemeContext.Provider, {\n      value: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Toolbar(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487\n    },\n    __self: this\n  }, React.createElement(ThemedButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488\n    },\n    __self: this\n  }));\n}\n\nclass ThemedButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      theme: this.context,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    });\n  }\n\n}\n\nThemedButton.contextType = ThemeContext;\nReactDOM.render(React.createElement(BasicExample, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 501\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/wangjunxiang11/Desktop/git/testReact/test_01/src/index.js"],"names":["React","ReactDOM","BasicExample","FancyBorder","props","color","children","WelcomeDialog","ThemeContext","createContext","App","Component","render","Toolbar","ThemedButton","context","contextType","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,MAAzqBC,KAArB,EAA4B;AACxB,SACI;AAAK,IAAA,SAAS,EAAE,6BAA6BA,KAAK,CAACC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,QADX,CADJ;AAKH;;AAED,SAASC,aAAT,GAAyB;AACrB,SACI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,CADJ;AAMH;;AAED,MAAMC,YAAY,GAAGR,KAAK,CAACS,aAAN,CAAoB,OAApB,CAArB;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAC9BC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAP6B;;AAUlC,SAASC,OAAT,CAAiBT,KAAjB,EAAwB;AACpB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAED,MAAMU,YAAN,SAA2Bd,KAAK,CAACW,SAAjC,CAA2C;AAEvCC,EAAAA,MAAM,GAAG;AACL,WAAO;AAAQ,MAAA,KAAK,EAAE,KAAKG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAJsC;;AAArCD,Y,CACKE,W,GAAcR,Y;AAMzBP,QAAQ,CAACW,MAAT,CACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BasicExample from '/App';\n// const user = {\n//     firstName: 'Harper',\n//     lastName: 'Perez'\n// };\n\n// const element = getGreeting(user)\n// const element = (\n// <div>\n//     <h1>Hello!</h1>\n//     <h1>Good to see you here.</h1>\n// </div>\n// );\n\n// const element = React.createElement(\n//     'h1',\n//     {className: 'greeting'},\n//     'Hello world!'\n// );\n\n\n// function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n// }\n\n// function getGreeting(user) {\n//     if (user) {\n//         return <h1>Hello, {formatName(user)}!</h1>;\n//     }\n//     return <h1>Hello, Stranger.</h1>;\n// }\n\n// function tick() {\n//     const element = (\n//         <div>\n//             <h1>Hello world!</h1>\n//             <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//         </div>\n//     );\n//     ReactDOM.render(element,document.getElementById('root'));\n// }\n\n// setInterval(tick, 1000);\n// ReactDOM.render 貌似是一个渲染函数（x,y）\n// ReactDOM.render(\n//     element,\n//     document.getElementById('root')\n// );\n\n// function Welcome(props) {\n//     return <h1>Hello, {props.name}</h1>\n// }\n\n// class Welcome extends React.Component {\n//     render() {\n//         return <h1>Hello, {this.props.name}</h1>;\n//     }\n// }\n\n// function App() {\n//     return (\n//         <div>\n//             <Welcome name=\"haha\"></Welcome>\n//             <Welcome></Welcome>\n//             <Welcome name=\"heihei\"></Welcome>\n//         </div>\n//     );\n// }\n\n// const element = <App></App>\n\n// ReactDOM.render(\n//     element,\n//     document.getElementById('root')\n// );\n\n// function Clock(props) {\n//     return (\n//         <div>\n//             <h1>Hello, world!</h1>\n//             <h1>It is {props.date.toLocaleTimeString()}</h1>\n//         </div>\n//     );\n// }\n\n// class Clock extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {date:new Date()};\n//         this.tick = this.tick.bind(this)\n//     }\n\n//     componentDidMount() {\n//         // 挂载\n//         this.timerID = setInterval(this.tick, 1000);\n//     }\n\n//     componentWillUnmount() {\n//         // 卸载\n//         clearInterval(this.timerID);\n//     }\n\n//     tick() {\n//         this.setState({\n//             date: new Date()\n//         });\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <hi>Hello, world!</hi>\n//                 <h2>It is {this.state.date.toLocaleTimeString()}</h2>\n//             </div>\n//         );\n//     }\n// }\n\n// function App() {\n//     return (\n//         <div>\n//             <Clock />\n//             <Clock />\n//             <Clock />\n//         </div>\n//     );\n// }\n\n// class Toggle extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {isToggleOn: true};\n//         this.handleClick = this.handleClick.bind(this);\n//     }\n\n//     handleClick() {\n//         this.setState(state => ({\n//             isToggleOn: !state.isToggleOn\n//         }));\n//     }\n\n//     render() {\n//         return (\n//             <button onClick={this.handleClick}>\n//                 {this.state.isToggleOn ? \"ON\":\"OFF\"}\n//             </button>\n//         );\n//     }\n// }\n\n// function UserGreeting(props) {\n//     return <h1>Welcome back!</h1>\n// }\n\n// function GuestGreeting(props) {\n//     return <h1>Please sign up.</h1>\n// }\n\n// function Greeting(props) {\n//     const isLoggedIn = props.isLoggedIn;\n//     if(isLoggedIn) {\n//         return <UserGreeting></UserGreeting>;\n//     }\n\n//     return <GuestGreeting/>\n// }\n\n// function LoginButton(props) {\n//     return (\n//         <button onClick={props.onClick}>login</button>\n//     );\n// }\n\n// function LogoutButton(props) {\n//     return (\n//         <button onClick={props.onClick}>Logout</button>\n//     );\n// }\n\n// class LoginControl extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleLoginClick = this.handleLoginClick.bind(this)\n//         this.handelLogoutClick = this.handelLogoutClick.bind(this)\n//         this.state = {isLoggedIn:false};\n//     }\n\n//     handleLoginClick() {\n//         this.setState({isLoggedIn:true});\n//     }\n\n//     handelLogoutClick() {\n//         this.setState({isLoggedIn:false});\n//     }\n\n//     render() {\n//         const isLoggedIn = this.state.isLoggedIn;\n//         let button;\n//         if (isLoggedIn) {\n//             button = <LogoutButton onClick={this.handelLogoutClick}/>\n//         } else {\n//             button = <LoginButton onClick={this.handleLoginClick}/>\n//         }\n\n//         return (\n//             <div>\n//                 <Greeting isLoggedIn={isLoggedIn}/>\n//                 {button}\n//             </div>\n//         )\n//     }\n// }\n\n// function Mailbox(props) {\n//     const unreadMessages = props.unreadMessages;\n//     return (\n//         <div>\n//             <h1>Hello!</h1>\n//             {\n//                 unreadMessages.length > 0 && \n//                 <h2>You have {unreadMessages.length} unread messages.</h2> \n//             }\n//         </div>\n//     );\n// }\n\n// const messages = ['React','Re: React','Re:Re: React'];\n\n// function WarningBanner(props) {\n//     if (!props.warn) {\n//         return null;\n//     }\n\n//     return (\n//         <div className=\"warning\">\n//             Warning!\n//         </div>\n//     );\n// }\n\n// class Page extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {showWarning: true};\n//         this.handleToggleClick = this.handleToggleClick.bind(this);\n//     }\n\n//     handleToggleClick() {\n//         this.setState(state => ({\n//             showWarning: !state.showWarning\n//         }));\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <WarningBanner warn={this.state.showWarning}/>\n//                 <button onClick={this.handleToggleClick}>\n//                     {this.state.showWarning ? 'Hide' : 'Show'}\n//                 </button>\n//             </div>\n//         );\n//     }\n// }\n\n// const numbers = [1,2,3,4,5];\n\n// function ListItem(props) {\n//     return <li>{props.value}</li>;\n// }\n\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number)=>\n//         <ListItem key={number.toString()} value={number}></ListItem> \n//     );\n\n//     return (\n//     <ul>{\n//         numbers.map((number)=>\n//             <ListItem key={number.toString} value={number}/>\n//         )\n//     }</ul>\n//     );\n// }\n\n// input \n\n// class NameForm extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {value: ''};\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n\n//     handleChange(event) {\n//         this.setState({value: event.target.value});\n//     }\n\n//     handleSubmit(event) {\n//         alert('提交的名字: ' + this.state.value);\n//         event.preventDefault(); \n//     }\n\n//     render() {\n//         return (\n//             <form onSubmit={this.handleSubmit}>\n//                 <label>\n//                     名字:\n//                     <input type=\"text\" value={this.state.value} onChange={this.handleChange}></input>\n//                 </label>\n//                 <input type=\"submit\" value=\"提交\" />  \n//             </form>\n//         );\n//     }\n// }\n\n// class EssayForm extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             value: '请撰写一篇关于你喜欢的 DOM 元素的文章.'\n//         };\n\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n\n//     handleChange(event) {\n//         this.setState({value: event.target.value});\n//     }\n\n//     handleSubmit(event) {\n//         alert('提交的文章: ' + this.state.value);\n//         event.preventDefault();\n//     }\n\n//     render() {\n//         return (\n//           <form onSubmit={this.handleSubmit}>\n//             <label>\n//               选择你喜欢的风味:\n//               <select value={this.state.value} onChange={this.handleChange}>\n//                 <option value=\"grapefruit\">葡萄柚</option>\n//                 <option value=\"lime\">酸橙</option>\n//                 <option value=\"coconut\">椰子</option>\n//                 <option value=\"mango\">芒果</option>\n//               </select>\n//             </label>\n//             <input type=\"submit\" value=\"提交\" />\n//           </form>\n//         );\n//       }\n// }\n\n// function toCelsius(fahrenheit) {\n//     return (fahrenheit - 32) * 5 / 9;\n// }\n\n// function toFahrenheit(celsius) {\n//     return (celsius * 9 / 5) + 32;\n// }\n\n// function tryConvert(temperature, convert) {\n//     const input = parseFloat(temperature);\n//     if (Number.isNaN(input)) {\n//         return '';\n//     }\n//     const output = convert(input);\n//     const rounded = Math.round(output * 1000) / 1000;\n//     return rounded.toString();\n// }\n\n// const scaleNames = {\n//     c: 'Celsius',\n//     f: 'Fahrenheit'\n// };\n\n// class TemperatureInput extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleChange = this.handleChange.bind(this);\n//     }\n\n//     handleChange(e) {\n//         // this.setState({temperature: e.target.value});\n//         this.props.onTemperatureChange(e.target.value)\n//     }\n\n//     render() {\n//         const temperature = this.props.temperature;\n//         const scale = this.props.scale;\n//         return (\n//             <fieldset>\n//                 <legend>Enter temperature in {scaleNames[scale]}:</legend>\n//                 <input value={temperature}\n//                     onChange={this.handleChange}></input>\n//             </fieldset>\n//         );\n//     }\n// }\n\n// function BoilingVerdict(props) {\n//     if (props.celsius >= 100) {\n//         return <p>The water would boil.</p>\n//     }\n\n//     return <p>The water would not boil.</p>\n// }\n\n// class Calculator extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n//         this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n//         this.state = { temperature: '', scale: 'c' };\n//     }\n\n//     handleCelsiusChange(temperature) {\n//         this.setState({ scale: 'c', temperature });\n//     }\n\n//     handleFahrenheitChange(temperature) {\n//         this.setState({ scale: 'f', temperature });\n//     }\n\n//     render() {\n//         const scale = this.state.scale;\n//         const temperature = this.state.temperature;\n//         const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n//         const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n//         return (\n//             <div>\n//                 <TemperatureInput\n//                     scale=\"c\"\n//                     temperature={celsius}\n//                     onTemperatureChange={this.handleCelsiusChange} />\n\n//                 <TemperatureInput\n//                     scale=\"f\"\n//                     temperature={fahrenheit}\n//                     onTemperatureChange={this.handleFahrenheitChange} />\n\n//                 <BoilingVerdict\n//                     celsius={parseFloat(celsius)} />\n\n//             </div>\n//         );\n//     }\n// }\n\nfunction FancyBorder(props) {\n    return (\n        <div className={'FancyBorder FancyBorder-' + props.color}>\n            {props.children}\n        </div>\n    );\n}\n\nfunction WelcomeDialog() {\n    return (\n        <FancyBorder color='blue'>\n            <h1 className=\"Dialog-title\">Welcome</h1>\n            <p className=\"Dialog-message\">Thank you for visiting our spacecraft!</p>\n        </FancyBorder>\n    );\n}\n\nconst ThemeContext = React.createContext('light')\n\nclass App extends React.Component {\n    render() {\n        return (\n            <ThemeContext.Provider value=\"dark\">\n                <Toolbar />\n            </ThemeContext.Provider>\n        );\n    }\n}\n\nfunction Toolbar(props) {\n    return (\n        <div>\n            <ThemedButton />\n        </div>\n    );\n}\n\nclass ThemedButton extends React.Component {\n    static contextType = ThemeContext;\n    render() {\n        return <button theme={this.context} />;\n    }\n}\n\nReactDOM.render(\n    <BasicExample />,\n    document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}